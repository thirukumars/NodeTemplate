components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        mobileNumber:
          type: string
        pager:
          type: string
        Office phone:
          type: string
        Fax:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        location:
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: boolean
        updatedBy:
          type: boolean
        notes:
          type: string
      example:
        _id: 1
        firstName: praveen kumar
        lastName: praveen kumar
        email: praveen@example.com
        password: password1
        role: admin
        mobileNumber: "1234567890"
        street: 2311  Sundown Lane
        city: Austin
        state: Texas
        location: location
        isActive: true,
        createdBy: "1"
        updatedBy: "2"
        notes: "From xyz"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00

    Favourite:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        favouriteId:
          type: string
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        createdBy:
          type: boolean
        updatedBy:
          type: boolean
      example:
        _id: 1
        userId: "1"
        favouriteId: "2"
        isActive: true,
        createdBy: "1"
        updatedBy: "2"
        createdAt: 2020-11-11T04:16:19.513+00:00
        updatedAt: 2020-11-11T04:16:19.513+00:00

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z
    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
